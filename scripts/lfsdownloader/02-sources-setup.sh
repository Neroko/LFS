#!/bin/bash

# Linux From Scratch (LFS) Sources Directory Setup
#
# VERSION (LFS):
#   12.2
#
# VERSION (SCRIPT):
#   1.0.0.1
#
# DATE LAST EDITED:
#   03/04/2025
#
# DATE CREATED:
#   03/03/2025
#
# AUTHOR:
#   TerryJohn Anscombe
#
# USAGE:
#   sources-setup.sh [options] ARG1
#
# OPTIONS:
#   -o [file], --output=[file]      Set log file
#   -h, --help                      Display this help
#   -v, --version                   Display versions
#
# DESCRIPTION
#   Script to download needed scripts and files to build LFS builder
#
# =======================
# == SCRIPT NOT TESTED ==
# =======================

# Directorys
LFS="/mnt/lfs"
sources_directory=""$LFS"/sources"
wget_list_link="https://www.linuxfromscratch.org/lfs/downloads/stable/wget-list"
md5sums_link="https://www.linuxfromscratch.org/lfs/downloads/stable/md5sums"

# Check for sudo
#current_user="whoami"
#groups "$current_user" | grep -o 'sudo'
groups "#(id -un)" | grep -q ' sudo ' && echo "In sudo group" || echo "Not in sudo group"

# == Chapter 3. Packages and Patches ==
# == 3.1. Introduction
# This chapter includes a list of packages that need to be downloaded in order to build a
# basic Linux system. The listed version numbers correspond of the software that are
# known to work, and this script is based on their use. We highly recommend against
# using different versions, because the build commands for one version may not work with
# a different version, unless the different version is specified by an LFS erratum or
# security advisory. The newest package versions may also have problems that require
# work-arounds. These work-arounds will be developed and stabilized in the development
# version of the book.

# For some packages, the release tarball and the (Git or SVN) repositiory snapshot tarball
# for that release may be published with similar or even identical file names. But the
# release tarball may contain some files which are essential despite not stored in the
# repository (for examoke, a 'configure' scropt generated by 'autoconf'), in addition to
# the contents of the corresponding repository snapshot. The script uses release tarballs
# whenever possible. Using a repositiory snapshot instead of a release tarball
# specified by the script will cause problems.

# Download locations may not always be accessible. If a download location has changed
# since this script was published, Google (https://www.google.com/) provides a useful
# search engine for most packages. If this search is unsuccessful, try one of the
# alternative means of downloading at:
#    "https://www.linuxfromscratch.org/lfs/mirrors.html#files"

# Downloaded pavkages and patches will need to be stored somewhere that is conveniently
# available throughout the entire build. A working directory is also required to unpack
# the sources and build them. '$LFS/sources' can be used both as the place to store the
# tarballs and patches and as a working directory. By using this directory, the
# required elements will be located on the LFS partition and will be available during
# all stages of the building process.

# Create the directory, execute the following command, as user 'root', before starting the
# download session:
mkdir -v "$sources_directory"

# Make this directory writable and sticky. "Sticky" means that even if multiple users have
# write permission on a directory, only the owner of a file can delete the file within a
# sticky directory. The following command will enable the write and sticky modes:
chmod -v a+wt "$sources_directory"

# There are seveeral ways to obtain all the necessary packages and patches to build LFS:
# - The files can be downloaded individually as described in the next two sections.
# - For stable versions of the book, a tarball of all the needed files can be downloaded
#   from one of the mirror sites listed at:
#       "https://www.linuxfromsratch.org/mirrors.html#files"
# - The files can be downloaded using wget and a wget-list as described below.

# To download all of the packages and patches by using wget-list as an input to the wget
# command, use:
wget "$wget_list_link"
wget "$md5sums_link"

wget                            \
    --input-file="wget-list"    \
    --continue                  \
    --directory-prefix="$sources_directory"

# Additionally, starting with LFS, there is a separate file, md5sums, which can be used to
# verify that all the correct packages are available before proceeding. Pkace that file in
# $LFS/sources and run:
pushd "$sources_directory"
    md5sums -c md5sums
popd
# This check can be used after retrieving the needed files with any of the methods above.

# If the packages and patches are downloaded as a non-root user, these files will be owned
# by the user. The file system records the owner by its UID, and the UID of a normal user
# in the host distro is not assigned in LFS. So the files will be left owned by an unnamed
# UID in the final LFS system. If you won't assign the same UID for your user in the LFS
# system, change the owners of these files to 'root' now to avoid this issue:
chown root:root ""$sources_directory"/*"

# == 3.2. All Packages
# = NOTES =
#    Read the security advisories before downloading packages to figure out if a newer
#    version of any package should be used to avoid security vulnerabilities.

#    The upstream sources may remove old releases, especially when those releases contain
#    a security vulnerability. If one URL below is not reachable, you should read the
#    security advisories first to figure out if a newer version (with the vulnerability
#    fixed) should be used. If not, try to download the removed package from a mirror.
#    Although it's possible to download an old release from a mirror even if this
#    release has been removed because of a vulnerability, it's not goof idea to use a
#    release known to be vulnerable when building your system.

# Download or otherwise obtain the following packages:
# - Acl (2.3.2) - 363 KB:
#    Home page: https://savannah.nongnu.org/projects/acl
#    Download: https://download.savannah.gnu.org/releases/acl/acl-2.3.2.tar.xz
#    MD5 sum: 590765dee95907dbc3c856f7255bd669
# - Attr (2.5.2) - 484 KB:
#    Home page: https://savannah.nongnu.org/projects/attr
#    Download: https://download.savannah.gnu.org/releases/attr/attr-2.5.2.tar.gz
#    MD5 sum: 227043ec2f6ca03c0948df5517f9c927
# - Autoconf (2.72) - 1,360 KB:
#    Home page: https://www.gnu.org/software/autoconf/
#    Download: https://ftp.gnu.org/gnu/autoconf/autoconf-2.72.tar.xz
#    MD5 sum: 1be79f7106ab6767f18391c5e22be701
# - Automake (1.17) - 1,614 KB:
#    Home page: https://www.gnu.org/software/automake/
#    Download: https://ftp.gnu.org/gnu/automake/automake-1.17.tar.xz
#    MD5 sum: 7ab3a02318fee6f5bd42adfc369abf10
# - Bash (5.2.37) - 10,868 KB:
#    Home page: https://www.gnu.org/software/bash/
#    Download: https://ftp.gnu.org/gnu/bash/bash-5.2.37.tar.gz
#    MD5 sum: 9c28f21ff65de72ca329c1779684a972
# - Bc (7.0.3) - 464 KB:
#    Home page: https://git.gavinhoward.com/gavin/bc
#    Download: https://github.com/gavinhoward/bc/releases/download/7.0.3/bc-7.0.3.tar.xz
#    MD5 sum: ad4db5a0eb4fdbb3f6813be4b6b3da74
# - Binutils (2.44) - 26,647 KB:
#    Home page: https://www.gnu.org/software/binutils/
#    Download: https://sourceware.org/pub/binutils/releases/binutils-2.44.tar.xz
#    MD5 sum: 49912ce774666a30806141f106124294
# - Bison (3.8.2) - 2,752 KB:
#    Home page: https://www.gnu.org/software/bison/
#    Download: https://ftp.gnu.org/gnu/bison/bison-3.8.2.tar.xz
#    MD5 sum: c28f119f405a2304ff0a7ccdcc629713
# - Bzip2 (1.0.8) - 792 KB:
#    Download: https://www.sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz
#    MD5 sum: 67e051268d0c475ea773822f7500d0e5
# - Check (0.15.2) - 760 KB:
#    Home page: https://libcheck.github.io/check
#    Download: https://github.com/libcheck/check/releases/download/0.15.2/check-0.15.2.tar.gz
#    MD5 sum: 50fcafcecde5a380415b12e9c574e0b2
# - Coreutils (9.6) - 5,991 KB:
#    Home page: https://www.gnu.org/software/coreutils/
#    Download: https://ftp.gnu.org/gnu/coreutils/coreutils-9.6.tar.xz
#    MD5 sum: 0ed6cc983fe02973bc98803155cc1733
# - DejaGNU (1.6.3) - 608 KB:
#    Home page: https://www.gnu.org/software/dejagnu/
#    Download: https://ftp.gnu.org/gnu/dejagnu/dejagnu-1.6.3.tar.gz
#    MD5 sum: 68c5208c58236eba447d7d6d1326b821
# - Diffutils (3.11) - 1,881 KB:
#    Home page: https://www.gnu.org/software/diffutils/
#    Download: https://ftp.gnu.org/gnu/diffutils/diffutils-3.11.tar.xz
#    MD5 sum: 75ab2bb7b5ac0e3e10cece85bd1780c2
# - E2fsprogs (1.47.2) - 9,763 KB:
#    Home page: https://e2fsprogs.sourceforge.net/
#    Download: https://downloads.sourceforge.net/project/e2fsprogs/e2fsprogs/v1.47.2/e2fsprogs-1.47.2.tar.gz
#    MD5 sum: 752e5a3ce19aea060d8a203f2fae9baa
# - Elfutils (0.192) - 11,635 KB:
#    Home page: https://sourceware.org/elfutils/
#    Download: https://sourceware.org/ftp/elfutils/0.192/elfutils-0.192.tar.bz2
#    MD5 sum: a6bb1efc147302cfc15b5c2b827f186a
# - Expat (2.6.4) - 476 KB:
#    Home page: https://libexpat.github.io/
#    Download: https://prdownloads.sourceforge.net/expat/expat-2.6.4.tar.xz
#    MD5 sum: 101fe3e320a2800f36af8cf4045b45c7
# - Expect (5.45.4) - 618 KB:
#    Home page: https://core.tcl.tk/expect/
#    Download: https://prdownloads.sourceforge.net/expect/expect5.45.4.tar.gz
#    MD5 sum: 00fce8de158422f5ccd2666512329bd2
# - File (5.46) - 1,283 KB:
#    Home page: https://www.darwinsys.com/file/
#    Download: https://astron.com/pub/file/file-5.46.tar.gz
#    MD5 sum: 459da2d4b534801e2e2861611d823864
# - Findutils (4.10.0) - 2,189 KB:
#    Home page: https://www.gnu.org/software/findutils/
#    Download: https://ftp.gnu.org/gnu/findutils/findutils-4.10.0.tar.xz
#    MD5 sum: 870cfd71c07d37ebe56f9f4aaf4ad872
# - Flex (2.6.4) - 1,386 KB:
#    Home page: https://github.com/westes/flex
#    Download: https://github.com/westes/flex/releases/download/v2.6.4/flex-2.6.4.tar.gz
#    MD5 sum: 2882e3179748cc9f9c23ec593d6adc8d
# - Flit-core (3.11.0) - 51 KB:
#    Home page: https://pypi.org/project/flit-core/
#    Download: https://pypi.org/packages/source/f/flit-core/flit_core-3.11.0.tar.gz
#    MD5 sum: 6d677b1acef1769c4c7156c7508e0dbd
# - Gawk (5.3.1) - 3,428 KB:
#    Home page: https://www.gnu.org/software/gawk/
#    Download: https://ftp.gnu.org/gnu/gawk/gawk-5.3.1.tar.xz
#    MD5 sum: 4e9292a06b43694500e0620851762eec
# - GCC (14.2.0) - 90,144 KB:
#    Home page: https://gcc.gnu.org/
#    Download: https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.xz
#    MD5 sum: 2268420ba02dc01821960e274711bde0
# - GDBM (1.24) - 1,168 KB:
#    Home page: https://www.gnu.org/software/gdbm/
#    Download: https://ftp.gnu.org/gnu/gdbm/gdbm-1.24.tar.gz
#    MD5 sum: c780815649e52317be48331c1773e987
# - Gettext (0.24) - 8,120 KB:
#    Home page: https://www.gnu.org/software/gettext/
#    Download: https://ftp.gnu.org/gnu/gettext/gettext-0.24.tar.xz
#    MD5 sum: 87aea3013802a3c60fa3feb5c7164069
# - Glibc (2.41) - 18,892 KB:
#    Home page: https://www.gnu.org/software/libc/
#    Download: https://ftp.gnu.org/gnu/glibc/glibc-2.41.tar.xz
#    MD5 sum: 19862601af60f73ac69e067d3e9267d4

# == Note ==
# The Glibc developers maintain a 'Git branch' containing patches considered worthy for
# Glibc-2.41 but unfortunately developed after Glibc-2.41 release. The LFS editors will
# issue a security advisory if any security fix is added into the branch, but no actions
# will be taken for other newly added patches. You may review the patches yourself and
# incorporate some patches if you consider them important.


# == Chapter 4. Final Preparations ==
# == 4.2. Creating a Limited Directory Layout in the LFS Filesystem
# In this section, we begin populating the LFS filesystem with the pieces that will
# constitute the final Linux system. The first step is to create a limited directory
# hierarchy, so that the programs compiled in Chapter 6 (as well as glibc and libstdc++
# in Chapter 5) can be installed in their final location. We do this so those temporary
# programs will be overwritten when the final versions are built in Chapter 8.

# Create the required directory layout by issuing the following commands as root:
mkdir -pv "$LFS"/{eetc,var} "$LFS"/usr/{bin,lib,sbin}

for i in bin lib sib; do
    ln -sv usr/$1 $LFS/$i
done

case $(uname -m) in
    x86_64) mkdir -pv "$LFS"/lib64 ;;
esac

# Programs in Chapter 6 will compiled with a cross-compiler (more details can be found in
# section Toolchain Technical Notes). This cross-compiler will be installed in a special
# directory, to separate it from the other programs. Still acting as root, crate that
# directory with the command:
mkdir -pv $LFS/tools

# == 4.3. Adding the LFS User ==
# When logged in as user root, making a single mistake can damage or destroy a system.
# Therefore. the packages in the next two chapters are built as an unprivileged user. You
# could use your own user name, but to make it easier to set up a clean working
# environment, we will create a new user called lfs as a member of a new group (also named
# lfs) and run commands as lfs during the installation process. As root, issue the following
# commands to add the new user:
groupadd lfs
useradd -s /bin/bash -g lfs -m -k /dev/null lfs

# This is what the command line options mean:
# -s /bin/bash
#   This makes bash the default shell for user lfs.
# -g lfs
#   This option adds user lfs to group lfs.
# -m
#   This creates a home directory for lfs.
# -k /dev/null
#   This parameter prevents possible copying of files from a skeleton directory (the default
#   is /etc/skel) by changing the input location to the special null device.
# lfs
#   This is the name of the new user.

# If you want vto log in as lfs or switch to lfs from a non-root user (as opposed to
# switching to user lfs when logged in as root, which does not require the lfs user to have
# a password), you need to set a password for lfs. Issue the following command as the root
# user to set the password:
passwd lfs

# Grant lfs full access to all directories under $LFS by making lfs the owner:
chown -v lfs $LFS/{usr{,/*},lib,var,etc,bin,sbin,tools}
case $(uname -m) in
    x86_64) chown -v lfs $LFS/lib64 ;;
esac

# == Note ==
# In some host systems, the following su command does not complete properly and suspends the
# login for the lfs user to the background. If the prompt "lfs:~$" does not appear
# imediately, entering the fg command will fix the issue.
